<%@ page language="java" import="java.util.*" pageEncoding="utf-8"%>
<%@page import="com.wushengde.el.Person"%>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!-- EL表达式 -->
<html>
  <head>
  </head>
  <body>
  <h1 style="text-align:center;">EL表达式作用之一：获取数据</h1>
  <b style="color:red;">注：EL表达式只能用来获取数据不能用来改变数据！</b>
  <h2>1.获取数据常量</h2><hr>
  <p>获取常量的类型: 字符串/数字/布尔类型,直接写在el表达式中,el直接进行输出</p>
   获取字符串：${"nice to meet you ! john" }<br>
   获取数字：${1234567890 }<br>
   布尔类型：${true }
   <h2>2.获取域中的变量</h2><hr>
   <p>获取域中的变量:如果el中写的是一个变量的名,则el会调用pageContext的findAttribute方法,
    在四大作用域中以给定的名字找对应的属性值,找到后进行输出,如果四个域中都找不到,什么都不输出</p>
    <% String name="张无忌";
    	pageContext.setAttribute("name",name);
     %>
  	获取域中变量名为name的值：${name }<br>
  	
     <h2>3.获取数组中的数据</h2><hr>
  	<% String[] names ={"张三丰","张翠山","张无忌","赵敏"}; 
  		pageContext.setAttribute("names",names);
  	%>
  	获取数组中的第一个元素：${names[0] }
  
   <h2>4.获取集合中的数据</h2><hr>
  	<% List<String> list = new ArrayList<String>();
  		list.add("郭嘉");
  		list.add("荀彧");
  		list.add("曹操");
  		pageContext.setAttribute("list",list);
  	 %>
  	获取集合中的第一个元素：${list[0] }
   <h2>5.获取MAP中的数据</h2><hr>
   <% Map<String,String> map = new HashMap();
   		map.put("name", "奥巴马");
		map.put("age", "18");
		map.put("gender", "男");
		map.put("address", "白宫");
  		pageContext.setAttribute("map",map);
    %>
   获取MAP中的键属性值：<br>
   姓名：${map["name"] }<br>
   年龄：${map["age"] }<br>
   性别：${map["gender"] }<br>
   地址：${map["address"] }
   
   <h2>6.获取javabean的属性值</h2><hr>
   <% Person p = new Person();
   	  p.setName("芙蓉姐姐");
   	  p.setAge(18);
   	  pageContext.setAttribute("p",p);
    %>
   获取javabean中属性值：需要定义一个Person类，然后设置其私有属性，并且创建其get/set方法<br>
   获取这个人的名字：${p.name }<br>
   获取这个人的年龄：${p.age }<br>
   
   
   <h1 style="text-align:center;">EL表达式作用之二：执行运算</h1>
   
   <h2>1.EL中的算术运算:如果有非数字参与运算EL表达式会试图将非数字转换为数字后进行计算</h2><hr>
   执行1+1后的结果：${1+1 }<br>
   执行2-1后的结果：${2-1 }<br>
   执行1+“3”后的结果：${1+"3" }<br>
   
   <h2>2.EL中的比较运算：> < >= <= != </h2>
   执行1==1 后的结果：${1==1 }<br>
   执行2==1 后的结果：${2==1 }<br>
   执行3>=2 后的结果：${3>=2 }<br>
   
   <h2>3.EL中的逻辑运算</h2>
   执行1>2或者3>2的结果：${1>2 or 3>2 }
   
   <h2>4.EL中的三元运算符</h2>
   执行2>1?1:2的结果：${2>1?1:2 }
   
   <h2>5.empty运算符：判断一个对象是否为null 或者一个字符串是否为空或集合内容是否为空或域总是否没有任何属性</h2>
   <% String str = null;
   	  pageContext.setAttribute("str",str);
   	  List list02 = new ArrayList();
   	  list02.add("");
   	  pageContext.setAttribute("list02",list02);
    %>
    判断str是否为空：${empty str }<br>
    判断list02是否为空：${empty list02 }
   
 <h1 style="text-align:center;">EL表达式作用之三：获取常用的内置对象</h1>  
   
   
  </body>
</html>
